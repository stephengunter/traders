{"version":3,"sources":["webpack:///./node_modules/vuedraggable/dist/vuedraggable.js","webpack:///./node_modules/vuedraggable/node_modules/sortablejs/Sortable.js"],"names":["Symbol","iterator","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","buildAttribute","object","propName","value","undefined","buildDraggable","Sortable","removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","children","nextSibling","insertBefore","computeVmIndex","vnodes","element","map","elt","elm","indexOf","_computeIndexes","slots","isTransition","elmFromNodes","rawIndexes","concat","filter","ind","emit","evtName","evtData","_this","this","$nextTick","$emit","toLowerCase","delegateAndEmit","_this2","realList","eventsListened","eventsToEmit","readonlyProperties","evt","draggingElement","props","options","list","type","required","default","noTransitionOnDrag","Boolean","clone","Function","original","String","move","componentData","draggableComponent","name","data","transitionMode","noneFunctionalComponentMode","init","render","h","$slots","child","componentOptions","tag","headerOffset","_$slots","header","footer","attributes","update","$attrs","_componentData","on","_props","mounted","_this3","$el","nodeName","Error","optionsAdded","forEach","bind","onMove","originalEvent","onDragMove","draggable","_sortable","rootContainer","computeIndexes","beforeDestroy","destroy","computed","isCloning","group","pull","watch","handler","newOptionValue","property","option","deep","methods","getChildrenNodes","$children","rawNodes","_this4","visibleIndexes","getUnderlyingVm","htmlElt","index","getUnderlyingPotencialDraggableComponent","_ref","__vue__","$options","_componentTag","$parent","emitChanges","_this5","alterList","onList","newList","spliceList","_arguments","splice","apply","updatePosition","oldIndex","newIndex","getRelatedContextFromMoveEvent","_ref2","to","related","component","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","nodes","transitionContainer","kept","onDragStart","item","_underlying_vm_","onDragAdd","updateEvenemt","added","onDragRemove","removed","onDragUpdate","moved","updateProperty","propertyName","computeFutureIndex","relatedContext","domChildren","el","style","currentDOMIndex","currentIndex","draggedInList","willInsertAfter","draggedContext","futureIndex","onDragEnd","slice","__webpack_require__","module","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","window","document","dragEl","parentEl","ghostEl","cloneEl","rootEl","nextEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","activeGroup","putSortable","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","tapEvt","touchEvt","lastTarget","lastDirection","lastMode","targetMoveDistance","realDragElRect","autoScrolls","scrolling","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","R_SPACE","expando","Date","getTime","win","parseInt","setTimeout","$","jQuery","Zepto","Polymer","captureMode","capture","passive","IE11OrLess","navigator","userAgent","match","Edge","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_silent","_alignedSilent","abs","Math","min","savedInputChecked","_detectDirection","elCSS","_css","elWidth","width","child1","_getChild","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","_getRect","secondChildWidth","display","flexDirection","_detectNearestEmptySortable","x","y","rect","threshold","emptyInsertThreshold","insideHorizontally","left","right","insideVertically","top","bottom","_isClientInRowColumn","axis","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","height","el2S1Opp","el2S2Opp","el2OppLength","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","isFallback","scroll","sens","scrollSensitivity","speed","scrollSpeed","clientX","clientY","scrollThisInstance","innerWidth","innerHeight","_clearAutoScrolls","scrollFn","layersOut","currentParent","css","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","scrollLeft","scrollTop","documentElement","clearInterval","pid","setInterval","layer","active","_emulateDragOver","scrollOffsetY","scrollOffsetX","scrollTo","pageXOffset","pageYOffset","bubbleScroll","autoScroll","_prepareGroup","toFn","sameGroup","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_isTrueParentSortable","trueParent","_artificalBubble","sortable","originalEvt","method","nextParent","_extend","artificialBubble","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","_throttleTimeout","nearestEmptyInsertDetectEvent","nearest","_onDragOver","nodeType","toString","defaults","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","fn","charAt","nativeDraggable","_on","_onTapStart","push","get","_closest","selector","ctx","includeCTX","_matches","_getParentOrHost","host","_globalDragOver","dropEffect","cancelable","event","_off","removeEventListener","_toggleClass","state","classList","className","replace","prop","val","defaultView","getComputedStyle","currentStyle","_matrix","appliedTransforms","transform","DOMMatrix","WebKitCSSMatrix","CSSMatrix","_find","tagName","getElementsByTagName","n","_dispatchEvent","targetEl","toEl","fromEl","startIndex","onName","toUpperCase","substr","CustomEvent","createEvent","initEvent","bubbles","dispatchEvent","_onMove","dragRect","retVal","onMoveFn","dragged","draggedRect","relatedRect","_disableDraggable","_unsilent","childNum","currentChild","_lastChild","last","lastElementChild","childElementCount","_ghostIsLast","elRect","mouseOnAxis","targetS2","_getSwapDirection","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","dragElIndex","_index","targetIndex","_generateId","str","src","href","sum","charCodeAt","previousElementSibling","matches","msMatchesSelector","webkitMatchesSelector","_","callback","ms","args","_cancelThrottle","clearTimeout","dst","_clone","dom","cloneNode","_saveInputCheckedState","root","inputs","idx","checked","_nextTick","_cancelNextTick","id","container","adjustForTransform","containerRect","matrix","scaleX","a","scaleY","d","_isScrolledPast","side","parent","elSide","visible","parentSide","constructor","elementFromPoint","sortableMouseAligned","_getDirection","touch","touches","originalTarget","shadowRoot","path","composedPath","button","isContentEditable","split","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","ogElemScroller","newElem","dragStartFn","ownerDocument","_lastX","_lastY","transition","_disableDelayedDrag","_triggerDragStart","_onDrop","_delayedDragTouchMoveHandler","_dragStartTimer","e","pointerType","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","bypassLastTouchCheck","inserted","dx","dy","translate3d","appendChild","_hideClone","_cloneId","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","animated","completed","contains","lastPutMode","_showClone","changed","_animate","targetBeforeFirstSwap","aligned","differentLevel","scrolledPastTop","nextElementSibling","after","moveVector","prevRect","currentRect","offsetWidth","_offUpEvents","save","handleEvent","toArray","order","getAttribute","items","set","closest","querySelectorAll","removeAttribute","cloneHidden","utils","off","find","is","extend","throttle","toggleClass","nextTick","cancelNextTick","detectDirection","getChild","create","version"],"mappings":"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","file":"js/chunk-025c813a.e15cf040.js","sourcesContent":["'use strict';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\n(function () {\r\n  \"use strict\";\r\n\r\n  if (!Array.from) {\r\n    Array.from = function (object) {\r\n      return [].slice.call(object);\r\n    };\r\n  }\r\n\r\n  function buildAttribute(object, propName, value) {\r\n    if (value == undefined) {\r\n      return object;\r\n    }\r\n    object = object == null ? {} : object;\r\n    object[propName] = value;\r\n    return object;\r\n  }\r\n\r\n  function buildDraggable(Sortable) {\r\n    function removeNode(node) {\r\n      node.parentElement.removeChild(node);\r\n    }\r\n\r\n    function insertNodeAt(fatherNode, node, position) {\r\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\r\n      fatherNode.insertBefore(node, refNode);\r\n    }\r\n\r\n    function computeVmIndex(vnodes, element) {\r\n      return vnodes.map(function (elt) {\r\n        return elt.elm;\r\n      }).indexOf(element);\r\n    }\r\n\r\n    function _computeIndexes(slots, children, isTransition) {\r\n      if (!slots) {\r\n        return [];\r\n      }\r\n\r\n      var elmFromNodes = slots.map(function (elt) {\r\n        return elt.elm;\r\n      });\r\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\r\n        return elmFromNodes.indexOf(elt);\r\n      });\r\n      return isTransition ? rawIndexes.filter(function (ind) {\r\n        return ind !== -1;\r\n      }) : rawIndexes;\r\n    }\r\n\r\n    function emit(evtName, evtData) {\r\n      var _this = this;\r\n\r\n      this.$nextTick(function () {\r\n        return _this.$emit(evtName.toLowerCase(), evtData);\r\n      });\r\n    }\r\n\r\n    function delegateAndEmit(evtName) {\r\n      var _this2 = this;\r\n\r\n      return function (evtData) {\r\n        if (_this2.realList !== null) {\r\n          _this2['onDrag' + evtName](evtData);\r\n        }\r\n        emit.call(_this2, evtName, evtData);\r\n      };\r\n    }\r\n\r\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\r\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\r\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\r\n      return 'on' + evt;\r\n    });\r\n    var draggingElement = null;\r\n\r\n    var props = {\r\n      options: Object,\r\n      list: {\r\n        type: Array,\r\n        required: false,\r\n        default: null\r\n      },\r\n      value: {\r\n        type: Array,\r\n        required: false,\r\n        default: null\r\n      },\r\n      noTransitionOnDrag: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      clone: {\r\n        type: Function,\r\n        default: function _default(original) {\r\n          return original;\r\n        }\r\n      },\r\n      element: {\r\n        type: String,\r\n        default: 'div'\r\n      },\r\n      move: {\r\n        type: Function,\r\n        default: null\r\n      },\r\n      componentData: {\r\n        type: Object,\r\n        required: false,\r\n        default: null\r\n      }\r\n    };\r\n\r\n    var draggableComponent = {\r\n      name: 'draggable',\r\n\r\n      props: props,\r\n\r\n      data: function data() {\r\n        return {\r\n          transitionMode: false,\r\n          noneFunctionalComponentMode: false,\r\n          init: false\r\n        };\r\n      },\r\n      render: function render(h) {\r\n        var slots = this.$slots.default;\r\n        if (slots && slots.length === 1) {\r\n          var child = slots[0];\r\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\r\n            this.transitionMode = true;\r\n          }\r\n        }\r\n        var headerOffset = 0;\r\n        var children = slots;\r\n        var _$slots = this.$slots,\r\n            header = _$slots.header,\r\n            footer = _$slots.footer;\r\n\r\n        if (header) {\r\n          headerOffset = header.length;\r\n          children = children ? [].concat(_toConsumableArray(header), _toConsumableArray(children)) : [].concat(_toConsumableArray(header));\r\n        }\r\n        if (footer) {\r\n          children = children ? [].concat(_toConsumableArray(children), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\r\n        }\r\n        this.headerOffset = headerOffset;\r\n        var attributes = null;\r\n        var update = function update(name, value) {\r\n          attributes = buildAttribute(attributes, name, value);\r\n        };\r\n        update('attrs', this.$attrs);\r\n        if (this.componentData) {\r\n          var _componentData = this.componentData,\r\n              on = _componentData.on,\r\n              _props = _componentData.props;\r\n\r\n          update('on', on);\r\n          update('props', _props);\r\n        }\r\n        return h(this.element, attributes, children);\r\n      },\r\n      mounted: function mounted() {\r\n        var _this3 = this;\r\n\r\n        this.noneFunctionalComponentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\r\n        if (this.noneFunctionalComponentMode && this.transitionMode) {\r\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\r\n        }\r\n        var optionsAdded = {};\r\n        eventsListened.forEach(function (elt) {\r\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\r\n        });\r\n\r\n        eventsToEmit.forEach(function (elt) {\r\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\r\n        });\r\n\r\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\r\n            return _this3.onDragMove(evt, originalEvent);\r\n          } });\r\n        !('draggable' in options) && (options.draggable = '>*');\r\n        this._sortable = new Sortable(this.rootContainer, options);\r\n        this.computeIndexes();\r\n      },\r\n      beforeDestroy: function beforeDestroy() {\r\n        if (this._sortable !== undefined) this._sortable.destroy();\r\n      },\r\n\r\n\r\n      computed: {\r\n        rootContainer: function rootContainer() {\r\n          return this.transitionMode ? this.$el.children[0] : this.$el;\r\n        },\r\n        isCloning: function isCloning() {\r\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\r\n        },\r\n        realList: function realList() {\r\n          return !!this.list ? this.list : this.value;\r\n        }\r\n      },\r\n\r\n      watch: {\r\n        options: {\r\n          handler: function handler(newOptionValue) {\r\n            for (var property in newOptionValue) {\r\n              if (readonlyProperties.indexOf(property) == -1) {\r\n                this._sortable.option(property, newOptionValue[property]);\r\n              }\r\n            }\r\n          },\r\n\r\n          deep: true\r\n        },\r\n\r\n        realList: function realList() {\r\n          this.computeIndexes();\r\n        }\r\n      },\r\n\r\n      methods: {\r\n        getChildrenNodes: function getChildrenNodes() {\r\n          if (!this.init) {\r\n            this.noneFunctionalComponentMode = this.noneFunctionalComponentMode && this.$children.length == 1;\r\n            this.init = true;\r\n          }\r\n\r\n          if (this.noneFunctionalComponentMode) {\r\n            return this.$children[0].$slots.default;\r\n          }\r\n          var rawNodes = this.$slots.default;\r\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\r\n        },\r\n        computeIndexes: function computeIndexes() {\r\n          var _this4 = this;\r\n\r\n          this.$nextTick(function () {\r\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\r\n          });\r\n        },\r\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\r\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\r\n          if (index === -1) {\r\n            //Edge case during move callback: related element might be\r\n            //an element different from collection\r\n            return null;\r\n          }\r\n          var element = this.realList[index];\r\n          return { index: index, element: element };\r\n        },\r\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\r\n          var __vue__ = _ref.__vue__;\r\n\r\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\r\n            return __vue__;\r\n          }\r\n          return __vue__.$parent;\r\n        },\r\n        emitChanges: function emitChanges(evt) {\r\n          var _this5 = this;\r\n\r\n          this.$nextTick(function () {\r\n            _this5.$emit('change', evt);\r\n          });\r\n        },\r\n        alterList: function alterList(onList) {\r\n          if (!!this.list) {\r\n            onList(this.list);\r\n          } else {\r\n            var newList = [].concat(_toConsumableArray(this.value));\r\n            onList(newList);\r\n            this.$emit('input', newList);\r\n          }\r\n        },\r\n        spliceList: function spliceList() {\r\n          var _arguments = arguments;\r\n\r\n          var spliceList = function spliceList(list) {\r\n            return list.splice.apply(list, _arguments);\r\n          };\r\n          this.alterList(spliceList);\r\n        },\r\n        updatePosition: function updatePosition(oldIndex, newIndex) {\r\n          var updatePosition = function updatePosition(list) {\r\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\r\n          };\r\n          this.alterList(updatePosition);\r\n        },\r\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\r\n          var to = _ref2.to,\r\n              related = _ref2.related;\r\n\r\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\r\n          if (!component) {\r\n            return { component: component };\r\n          }\r\n          var list = component.realList;\r\n          var context = { list: list, component: component };\r\n          if (to !== related && list && component.getUnderlyingVm) {\r\n            var destination = component.getUnderlyingVm(related);\r\n            if (destination) {\r\n              return _extends(destination, context);\r\n            }\r\n          }\r\n\r\n          return context;\r\n        },\r\n        getVmIndex: function getVmIndex(domIndex) {\r\n          var indexes = this.visibleIndexes;\r\n          var numberIndexes = indexes.length;\r\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\r\n        },\r\n        getComponent: function getComponent() {\r\n          return this.$slots.default[0].componentInstance;\r\n        },\r\n        resetTransitionData: function resetTransitionData(index) {\r\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\r\n            return;\r\n          }\r\n          var nodes = this.getChildrenNodes();\r\n          nodes[index].data = null;\r\n          var transitionContainer = this.getComponent();\r\n          transitionContainer.children = [];\r\n          transitionContainer.kept = undefined;\r\n        },\r\n        onDragStart: function onDragStart(evt) {\r\n          this.context = this.getUnderlyingVm(evt.item);\r\n          evt.item._underlying_vm_ = this.clone(this.context.element);\r\n          draggingElement = evt.item;\r\n        },\r\n        onDragAdd: function onDragAdd(evt) {\r\n          this.updateEvenemt(evt);\r\n          var element = evt.item._underlying_vm_;\r\n          if (element === undefined) {\r\n            return;\r\n          }\r\n          removeNode(evt.item);\r\n          var newIndex = this.getVmIndex(evt.newIndex);\r\n          this.spliceList(newIndex, 0, element);\r\n          this.computeIndexes();\r\n          var added = { element: element, newIndex: newIndex };\r\n          this.emitChanges({ added: added });\r\n        },\r\n        onDragRemove: function onDragRemove(evt) {\r\n          this.updateEvenemt(evt);\r\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\r\n          if (this.isCloning) {\r\n            removeNode(evt.clone);\r\n            return;\r\n          }\r\n          var oldIndex = this.context.index;\r\n          this.spliceList(oldIndex, 1);\r\n          var removed = { element: this.context.element, oldIndex: oldIndex };\r\n          this.resetTransitionData(oldIndex);\r\n          this.emitChanges({ removed: removed });\r\n        },\r\n        onDragUpdate: function onDragUpdate(evt) {\r\n          this.updateEvenemt(evt);\r\n          removeNode(evt.item);\r\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\r\n          var oldIndex = this.context.index;\r\n          var newIndex = this.getVmIndex(evt.newIndex);\r\n          this.updatePosition(oldIndex, newIndex);\r\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\r\n          this.emitChanges({ moved: moved });\r\n        },\r\n        updateEvenemt: function updateEvenemt(evt) {\r\n          this.updateProperty(evt, 'newIndex');\r\n          this.updateProperty(evt, 'oldIndex');\r\n        },\r\n        updateProperty: function updateProperty(evt, propertyName) {\r\n          evt.hasOwnProperty(propertyName) && (evt[propertyName] += this.headerOffset);\r\n        },\r\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\r\n          if (!relatedContext.element) {\r\n            return 0;\r\n          }\r\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\r\n            return el.style['display'] !== 'none';\r\n          });\r\n          var currentDOMIndex = domChildren.indexOf(evt.related);\r\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\r\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\r\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\r\n        },\r\n        onDragMove: function onDragMove(evt, originalEvent) {\r\n          var onMove = this.move;\r\n          if (!onMove || !this.realList) {\r\n            return true;\r\n          }\r\n\r\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\r\n          var draggedContext = this.context;\r\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\r\n          _extends(draggedContext, { futureIndex: futureIndex });\r\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\r\n          return onMove(evt, originalEvent);\r\n        },\r\n        onDragEnd: function onDragEnd(evt) {\r\n          this.computeIndexes();\r\n          draggingElement = null;\r\n        }\r\n      }\r\n    };\r\n    return draggableComponent;\r\n  }\r\n\r\n  if (typeof exports == \"object\") {\r\n    var Sortable = require(\"sortablejs\");\r\n    module.exports = buildDraggable(Sortable);\r\n  } else if (typeof define == \"function\" && define.amd) {\r\n    define(['sortablejs'], function (Sortable) {\r\n      return buildDraggable(Sortable);\r\n    });\r\n  } else if (window && window.Vue && window.Sortable) {\r\n    var draggable = buildDraggable(window.Sortable);\r\n    Vue.component('draggable', draggable);\r\n  }\r\n})();","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window === \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScrolls = [],\n\t\tscrolling = false,\n\n\t\tawaitingDragStarted = false,\n\t\tignoreNextClick = false,\n\t\tsortables = [],\n\n\t\tpointerElemChangedInterval,\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\tforRepaintDummy,\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\t// FireFox = !!navigator.userAgent.match(/firefox/i),\n\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')),\n\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\n\t\t_detectDirection = function(el, options) {\n\t\t\tvar elCSS = _css(el),\n\t\t\t\telWidth = parseInt(elCSS.width),\n\t\t\t\tchild1 = _getChild(el, 0, options),\n\t\t\t\tchild2 = _getChild(el, 1, options),\n\t\t\t\tfirstChildCSS = child1 && _css(child1),\n\t\t\t\tsecondChildCSS = child2 && _css(child2),\n\t\t\t\tfirstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + _getRect(child1).width,\n\t\t\t\tsecondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + _getRect(child2).width;\n\t\t\tif (elCSS.display === 'flex') {\n\t\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\n\t\t\t\t? 'vertical' : 'horizontal';\n\t\t\t}\n\t\t\treturn (child1 &&\n\t\t\t\t(\n\t\t\t\t\tfirstChildCSS.display === 'block' ||\n\t\t\t\t\tfirstChildCSS.display === 'flex' ||\n\t\t\t\t\tfirstChildCSS.display === 'table' ||\n\t\t\t\t\tfirstChildCSS.display === 'grid' ||\n\t\t\t\t\tfirstChildWidth >= elWidth &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\n\t\t\t\t\tchild2 &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\n\t\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\n\t\t\t\t) ?\n\t\t\t\t'vertical' : 'horizontal'\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable = function(x, y) {\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (sortables[i].children.length) continue;\n\n\t\t\t\tvar rect = _getRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = _getRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || _getRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t},\n\n\t\t_getParentAutoScrollElement = function(el, includeSelf) {\n\t\t\t// skip to window\n\t\t\tif (!el || !el.getBoundingClientRect) return win;\n\n\t\t\tvar elem = el;\n\t\t\tvar gotSelf = false;\n\t\t\tdo {\n\t\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\n\t\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n\t\t\t\t\tvar elemCSS = _css(elem);\n\t\t\t\t\tif (\n\t\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\n\t\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return win;\n\n\t\t\t\t\t\tif (gotSelf || includeSelf) return elem;\n\t\t\t\t\t\tgotSelf = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t\t} while (elem = elem.parentNode);\n\n\t\t\treturn win;\n\t\t},\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (options.scroll) {\n\t\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tscrollThisInstance = false;\n\n\t\t\t\t// Detect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\t_clearAutoScrolls();\n\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\n\t\t\t\t\t\tscrollParentEl = scrollEl;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar layersOut = 0;\n\t\t\t\tvar currentParent = scrollEl;\n\t\t\t\tdo {\n\t\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\t\trect = _getRect(el),\n\n\t\t\t\t\t\ttop = rect.top,\n\t\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\t\tleft = rect.left,\n\t\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\t\twidth = rect.width,\n\t\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\t\tscrollWidth,\n\t\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\t\tcss,\n\n\t\t\t\t\t\tvx,\n\t\t\t\t\t\tvy,\n\n\t\t\t\t\t\tcanScrollX,\n\t\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\t\tscrollPosX,\n\t\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\t\tif (el !== win) {\n\t\t\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\t\t\tcss = _css(el);\n\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\n\t\t\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\t\t\tscrollPosY = el.scrollTop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscrollWidth = document.documentElement.scrollWidth;\n\t\t\t\t\t\tscrollHeight = document.documentElement.scrollHeight;\n\n\t\t\t\t\t\tcss = _css(document.documentElement);\n\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\n\t\t\t\t\t\tscrollPosX = document.documentElement.scrollLeft;\n\t\t\t\t\t\tscrollPosY = document.documentElement.scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (autoScrolls[this.layer].el === win) {\n\t\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlayersOut++;\n\t\t\t\t} while (options.bubbleScroll && currentParent !== win && (currentParent = _getParentAutoScrollElement(currentParent, false)));\n\t\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t\t}\n\t\t}, 30),\n\n\t\t_clearAutoScrolls = function () {\n\t\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\t\tclearInterval(autoScroll.pid);\n\t\t\t});\n\t\t\tautoScrolls = [];\n\t\t},\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t},\n\n\t\t_checkAlignment = function(evt) {\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t},\n\n\t\t_isTrueParentSortable = function(el, target) {\n\t\t\tvar trueParent = target;\n\t\t\twhile (!trueParent[expando]) {\n\t\t\t\ttrueParent = trueParent.parentNode;\n\t\t\t}\n\n\t\t\treturn el === trueParent;\n\t\t},\n\n\t\t_artificalBubble = function(sortable, originalEvt, method) {\n\t\t\t// Artificial IE bubbling\n\t\t\tvar nextParent = sortable.parentNode;\n\t\t\twhile (nextParent && !nextParent[expando]) {\n\t\t\t\tnextParent = nextParent.parentNode;\n\t\t\t}\n\n\t\t\tif (nextParent) {\n\t\t\t\tnextParent[expando][method](_extend(originalEvt, {\n\t\t\t\t\tartificialBubble: true\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\n\t\t_hideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t}\n\t\t},\n\n\t\t_unhideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t}\n\t\t};\n\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\n\t\tif (dragEl) {\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\tif (nearest) {\n\t\t\t\tnearest[expando]._onDragOver({\n\t\t\t\t\tclientX: evt.clientX,\n\t\t\t\t\tclientY: evt.clientY,\n\t\t\t\t\ttarget: nearest,\n\t\t\t\t\trootEl: nearest\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\t// We do not want this to be triggered if completed (bubbling canceled), so only define it here\n\tdocument.addEventListener('dragover', nearestEmptyInsertDetectEvent);\n\tdocument.addEventListener('mousemove', nearestEmptyInsertDetectEvent);\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function() {\n\t\t\t\treturn _detectDirection(el, this.options);\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\tsupportPointer: Sortable.supportPointer !== false && (\n\t\t\t\t('PointerEvent' in window) ||\n\t\t\t\twindow.navigator && ('msPointerEnabled' in window.navigator) // microsoft\n\t\t\t),\n\t\t\temptyInsertThreshold: 5\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\tif (options.supportPointer) {\n\t\t\t_on(el, 'pointerdown', this._onTapStart);\n\t\t} else {\n\t\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t}\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\tsortables.push(this.el);\n\n\t\t// Restore sorting\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\t}\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target;\n\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\n\t\t\t\t_hideGhostForTarget();\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (_closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!_closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n\t\t},\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tif (!evt.cancelable) return;\n\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// IE: Calls events in capture mode if event element is nested. This ensures only correct element's _onTapStart goes through.\n\t\t\t// This process is also done in _onDragOver\n\t\t\tif (IE11OrLess && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button and enabled\n\t\t\t}\n\n\t\t\t// cancel dnd if original target is content editable\n\t\t\tif (originalTarget.isContentEditable) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, options.draggable, el, false);\n\n\t\t\tif (!target) {\n\t\t\t\tif (IE11OrLess) {\n\t\t\t\t\t_artificalBubble(el, evt, '_onTapStart');\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el, false);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\t\t\tif (!dragEl || !this.options.scroll) return;\n\t\t\tvar x = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\telem = document.elementFromPoint(x, y),\n\t\t\t\t_this = this;\n\n\t\t\t// IE does not seem to have native autoscroll,\n\t\t\t// Edge's autoscroll seems too conditional,\n\t\t\t// Firefox and Chrome are good\n\t\t\tif (fallback || Edge || IE11OrLess) {\n\t\t\t\t_autoScroll(evt, _this.options, elem, fallback);\n\n\t\t\t\t// Listener for pointer element change\n\t\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\n\t\t\t\tif (\n\t\t\t\t\tscrolling &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\t\t\ty !== lastPointerElemY\n\t\t\t\t\t)\n\t\t\t\t) {\n\n\t\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t\tif (!dragEl) return;\n\t\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\t\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t\t\t_autoScroll(evt, _this.options, ogElemScroller, fallback);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 10);\n\t\t\t\t\tlastPointerElemX = x;\n\t\t\t\t\tlastPointerElemY = y;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n\t\t\t\tif (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === window) {\n\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);\n\t\t\t}\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: (touch || evt).clientX,\n\t\t\t\t\tclientY: (touch || evt).clientY\n\t\t\t\t};\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'all';\n\t\t\t\t// undo animation if needed\n\t\t\t\tdragEl.style.transition = '';\n\t\t\t\tdragEl.style.transform = '';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex);\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\tif (options.supportPointer) {\n\t\t\t\t\t_on(ownerDocument, 'pointerup', _this._onDrop);\n\t\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\toptions.supportPointer && _on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\n\t\t\tif (min(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\n\t\t\t\t\t>= this.options.touchStartThreshold\n\t\t\t) {\n\t\t\t\tthis._disableDelayedDrag();\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (!this.nativeDraggable || touch) {\n\t\t\t\tif (this.options.supportPointer) {\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t} else if (touch) {\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t} else {\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\t_nextTick(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function (fallback) {\n\t\t\tawaitingDragStarted = false;\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t_on(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t\t_on(document, 'dragover', _checkAlignment);\n\t\t\t\t}\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, false);\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\n\t\t\t\t// In case dragging an animated element\n\t\t\t\t_css(dragEl, 'transform', '');\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\tfallback && this._appendGhost();\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (bypassLastTouchCheck) {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !bypassLastTouchCheck) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tif (!evt.cancelable) return;\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tmatrix = ghostEl && _matrix(ghostEl),\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX) + fallbackOffset.x) / (scaleX ? scaleX : 1),\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY) + fallbackOffset.y) / (scaleY ? scaleY : 1),\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDragStart(evt, true);\n\t\t\t\t}\n\n\t\t\t\tthis._handleAutoScroll(touch, true);\n\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = _getRect(dragEl, this.options.fallbackOnBody ? document.body : rootEl, true),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\t_css(ghostEl, 'margin', 0);\n\t\t\t\t_css(ghostEl, 'top', rect.top);\n\t\t\t\t_css(ghostEl, 'left', rect.left);\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n\t\t\tvar _this = this;\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\t\t\tvar options = _this.options;\n\n\t\t\t// Setup clone\n\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\tcloneEl.draggable = false;\n\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\tthis._hideClone();\n\n\t\t\t_toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n\t\t\t// #1143: IFrame support workaround\n\t\t\t_this._cloneId = _nextTick(function () {\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t}\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\n\t\t\t});\n\n\n\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, true);\n\n\t\t\t// Set proper drop events\n\t\t\tif (fallback) {\n\t\t\t\tignoreNextClick = true;\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\n\t\t\t} else {\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\n\t\t\t\t_off(document, 'mouseup', _this._onDrop);\n\t\t\t\t_off(document, 'touchend', _this._onDrop);\n\t\t\t\t_off(document, 'touchcancel', _this._onDrop);\n\t\t\t\t_off(document, 'pointercancel', _this._onDrop);\n\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', _this);\n\n\t\t\t\t// #1276 fix:\n\t\t\t\t_css(dragEl, 'transform', 'translateZ(0)');\n\t\t\t}\n\n\t\t\tawaitingDragStarted = true;\n\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback));\n\t\t\t_on(document, 'selectstart', _this);\n\t\t},\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this;\n\n\t\t\tif (_silent) return;\n\n\t\t\t// IE event order fix\n\t\t\tif (IE11OrLess && !evt.rootEl && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return invocation when no further action is needed in another sortable\n\t\t\tfunction completed() {\n\t\t\t\tif (activeSortable) {\n\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t}\n\n\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\n\t\t\t\t\tputSortable = _this;\n\t\t\t\t} else if (_this === Sortable.active) {\n\t\t\t\t\tputSortable = null;\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t_this._handleAutoScroll(evt);\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = _closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (!!_closest(evt.target, null, dragEl, true) || target.animated) {\n\t\t\t\treturn completed();\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = _getRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed();\n\t\t\t\t}\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t_ghostIsLast(evt, axis, el) && !dragEl.animated\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = _lastChild(el);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = _getRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t\treturn completed();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && (target.parentNode[expando] !== void 0) && target !== el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, axis === 'vertical' ? 'top' : 'left');\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = _getRect(target)[axis === 'vertical' ? 'top' : 'left'];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel || scrolling || scrolledPastTop;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target, options);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed();\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = _getRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[axis === 'vertical' ? 'top' : 'left']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\t!differentLevel && this._animate(targetRect, target);\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\n\t\t\t\t\t\treturn completed();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (IE11OrLess && !evt.rootEl) {\n\t\t\t\t_artificalBubble(el, evt, '_onDragOver');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = _getRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = _getRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = _matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tforRepaintDummy = target.offsetWidth; // repaint\n\t\t\t\t\t_css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(document, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t_clearAutoScrolls();\n\t\t\t_cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t\t_off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t_off(document, 'dragover', _checkAlignment);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\t\t\tautoScrolls.length =\n\n\t\t\tpointerElemChangedInterval =\n\t\t\tlastPointerElemX =\n\t\t\tlastPointerElemY =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\toldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\tforRepaintDummy =\n\t\t\trealDragElRect =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t},\n\n\t\t_hideClone: function() {\n\t\t\tif (!cloneEl.cloneHidden) {\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\tcloneEl.cloneHidden = true;\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_showClone: function(putSortable) {\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\n\t\t\t\tthis._hideClone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cloneEl.cloneHidden) {\n\t\t\t\t// show clone at dragEl or original position\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t} else if (nextEl) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t} else {\n\t\t\t\t\trootEl.appendChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.group.revertClone) {\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\n\t\t\t\t}\n\t\t\t\t_css(cloneEl, 'display', '');\n\t\t\t\tcloneEl.cloneHidden = false;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector) || (includeCTX && el === ctx)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\n\t\t\t\tif (el === ctx) break;\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\treturn (el.host && el !== document && el.host.nodeType)\n\t\t\t? el.host\n\t\t\t: el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el && name) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style) && prop.indexOf('webkit') === -1) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _matrix(el) {\n\t\tvar appliedTransforms = '';\n\t\tdo {\n\t\t\tvar transform = _css(el, 'transform');\n\n\t\t\tif (transform && transform !== 'none') {\n\t\t\t\tappliedTransforms = transform + ' ' + appliedTransforms;\n\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t} while (el = el.parentNode);\n\n\t\tif (window.DOMMatrix) {\n\t\t\treturn new DOMMatrix(appliedTransforms);\n\t\t} else if (window.WebKitCSSMatrix) {\n\t\t\treturn new WebKitCSSMatrix(appliedTransforms);\n\t\t} else if (window.CSSMatrix) {\n\t\t\treturn new CSSMatrix(appliedTransforms);\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, toEl, fromEl, startIndex, newIndex, originalEvt) {\n\t\tsortable = (sortable || rootEl[expando]);\n\t\tvar evt,\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent(name, {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, true);\n\t\t}\n\n\t\tevt.to = toEl || rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\tevt.originalEvent = originalEvt;\n\n\t\tif (rootEl) {\n\t\t\trootEl.dispatchEvent(evt);\n\t        }\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent('move', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent('move', true, true);\n\t\t}\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || _getRect(toEl);\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tevt.originalEvent = originalEvt;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\t/**\n\t * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n\t * and non-draggable elements\n\t * @param  {HTMLElement} el       The parent element\n\t * @param  {Number} childNum      The index of the child\n\t * @param  {Object} options       Parent Sortable's options\n\t * @return {HTMLElement}          The child at index childNum, or null if not found\n\t */\n\tfunction _getChild(el, childNum, options) {\n\t\tvar currentChild = 0,\n\t\t\ti = 0,\n\t\t\tchildren = el.children;\n\n\t\twhile (i < children.length) {\n\t\t\tif (\n\t\t\t\tchildren[i].style.display !== 'none' &&\n\t\t\t\tchildren[i] !== ghostEl &&\n\t\t\t\tchildren[i] !== dragEl &&\n\t\t\t\t_closest(children[i], options.draggable, el, false)\n\t\t\t) {\n\t\t\t\tif (currentChild === childNum) {\n\t\t\t\t\treturn children[i];\n\t\t\t\t}\n\t\t\t\tcurrentChild++;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\tfunction _lastChild(el) {\n\t\tvar last = el.lastElementChild;\n\n\t\tif (last === ghostEl) {\n\t\t\tlast = el.children[el.childElementCount - 2];\n\t\t}\n\n\t\treturn last || null;\n\t}\n\n\tfunction _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = _getRect(_lastChild(el)),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom;\n\n\t\treturn (\n\t\t\tmouseOnOppAxis > targetS1Opp &&\n\t\t\tmouseOnOppAxis < targetS2Opp &&\n\t\t\tmouseOnAxis > targetS2\n\t\t);\n\t}\n\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\tvar targetRect = _getRect(target),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\tdragRect = _getRect(dragEl),\n\t\t\tinvert = false;\n\n\n\t\tif (!invertSwap) {\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t}\n\n\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvert = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Regular\n\t\t\t\tif (\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t) {\n\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? -1 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinvert = invert || invertSwap;\n\n\t\tif (invert) {\n\t\t\t// Invert of regular\n\t\t\tif (\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t * seem that dragEl has been \"inserted\" into that element's position\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t * @param  {Object} options           options of the parent sortable\n\t * @return {Number}                   Direction dragEl must be swapped\n\t */\n\tfunction _getInsertDirection(target, options) {\n\t\tvar dragElIndex = _index(dragEl, options.draggable),\n\t\t\ttargetIndex = _index(target, options.draggable);\n\n\t\tif (dragElIndex < targetIndex) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\ttry {\n\t\t\t\tif (el.matches) {\n\t\t\t\t\treturn el.matches(selector);\n\t\t\t\t} else if (el.msMatchesSelector) {\n\t\t\t\t\treturn el.msMatchesSelector(selector);\n\t\t\t\t} else if (el.webkitMatchesSelector) {\n\t\t\t\t\treturn el.webkitMatchesSelector(selector);\n\t\t\t\t}\n\t\t\t} catch(_) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn function () {\n\t\t\tif (!_throttleTimeout) {\n\t\t\t\tvar args = arguments,\n\t\t\t\t\t_this = this;\n\n\t\t\t\t_throttleTimeout = setTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\t_throttleTimeout = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _cancelThrottle() {\n\t\tclearTimeout(_throttleTimeout);\n\t\t_throttleTimeout = void 0;\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\tif (Polymer && Polymer.dom) {\n\t\t\treturn Polymer.dom(el).cloneNode(true);\n\t\t}\n\t\telse if ($) {\n\t\t\treturn $(el).clone(true)[0];\n\t\t}\n\t\telse {\n\t\t\treturn el.cloneNode(true);\n\t\t}\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tsavedInputChecked.length = 0;\n\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\tfunction _nextTick(fn) {\n\t\treturn setTimeout(fn, 0);\n\t}\n\n\tfunction _cancelNextTick(id) {\n\t\treturn clearTimeout(id);\n\t}\n\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * (used for fixed positioning on el)\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, container, adjustForTransform) {\n\t\tif (!el.getBoundingClientRect && el !== win) return;\n\n\t\tvar elRect,\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\theight,\n\t\t\twidth;\n\n\t\tif (el !== win) {\n\t\t\telRect = el.getBoundingClientRect();\n\t\t\ttop = elRect.top;\n\t\t\tleft = elRect.left;\n\t\t\tbottom = elRect.bottom;\n\t\t\tright = elRect.right;\n\t\t\theight = elRect.height;\n\t\t\twidth = elRect.width;\n\t\t} else {\n\t\t\ttop = 0;\n\t\t\tleft = 0;\n\t\t\tbottom = window.innerHeight;\n\t\t\tright = window.innerWidth;\n\t\t\theight = window.innerHeight;\n\t\t\twidth = window.innerWidth;\n\t\t}\n\n\t\tif (adjustForTransform && el !== win) {\n\t\t\t// Adjust for translate()\n\t\t\tcontainer = container || el.parentNode;\n\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n\t\t\t// Not needed on <= IE11\n\t\t\tif (!IE11OrLess) {\n\t\t\t\tdo {\n\t\t\t\t\tif (container && container.getBoundingClientRect && _css(container, 'transform') !== 'none') {\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\n\n\t\t\t\t\t\t// Set relative to edges of padding box of container\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(_css(container, 'border-top-width'));\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(_css(container, 'border-left-width'));\n\t\t\t\t\t\tbottom = top + elRect.height;\n\t\t\t\t\t\tright = left + elRect.width;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t} while (container = container.parentNode);\n\t\t\t}\n\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = _matrix(el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\t/**\n\t * Checks if a side of an element is scrolled past a side of it's parents\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\n\t * @return {Boolean}               Whether the element is overflowing the viewport on the given side of it's parent\n\t */\n\tfunction _isScrolledPast(el, side) {\n\t\tvar parent = _getParentAutoScrollElement(parent, true),\n\t\t\telSide = _getRect(el)[side];\n\n\t\t/* jshint boss:true */\n\t\twhile (parent) {\n\t\t\tvar parentSide = _getRect(parent)[side],\n\t\t\t\tvisible;\n\n\t\t\tif (side === 'top' || side === 'left') {\n\t\t\t\tvisible = elSide >= parentSide;\n\t\t\t} else {\n\t\t\t\tvisible = elSide <= parentSide;\n\t\t\t}\n\n\t\t\tif (!visible) return true;\n\n\t\t\tif (parent === win) break;\n\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Fixed #973:\n\t_on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el, false);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index,\n\t\tnextTick: _nextTick,\n\t\tcancelNextTick: _cancelNextTick,\n\t\tdetectDirection: _detectDirection,\n\t\tgetChild: _getChild\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.8.1';\n\treturn Sortable;\n});\n"],"sourceRoot":""}